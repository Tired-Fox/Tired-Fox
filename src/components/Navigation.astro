---
import { Icon } from "astro-icon";
import type { Link } from "../scripts/navigation.ts";
import { selectIcon } from "../scripts/icons";

type Props = {
  links?: Link[],
  open?: boolean,
};

const { links = [], open=false } = Astro.props;
const base = import.meta.env.BASE_URL;
---

{
  links && (
    <aside id="navigation" class={open ? '' : 'hide'}>
      <nav>
        <div id="title">
          <div>
            <h3>Zachary Boehm</h3>
            <p>Software Developer</p>
          </div>
        </div>
        <button id="pointer" onclick="
        toggleNav()
        ">
            <Icon name="angles-left" style="width: 1.25rem;"/>
        </button>
        <div id="legend">
          <span>Legend</span>
          <div>
            {links.map((link) => {
              return (
                <div class="legend-item">
                  <Icon name={`${selectIcon(link.name || link.display)}`} />
                  <a href={`${base}${link.src}`} title={link.title || link.display}>
                    {link.display}
                  </a>
                </div>
              );
            })}
          </div>
        </div>
      </nav>
      <style lang="scss">
        #title {
          & > div {
            width: 100%;
            padding: 0.5rem 1rem;
            height: fit-content;

            border: 1px solid rgb(var(--text));
            //   white-space: nowrap;
            text-align: center;
            & :is(h1, p) {
              margin: 0;
            }
          }
        }
        #pointer {
          text-align: right;
          width: fit-content;
          height: fit-content;
          border: none;
          outline: none;
          margin-left: auto;
          background-color: transparent;
          color: rgb(var(--text));
        }

        #legend {
          position: relative;
        
          width: 100%;
          max-height: 60%;
        
          border: 1px solid rgb(var(--text));
        
          & > div {
            overflow-y: auto;
            width: 100%;
            height: 100%;
            padding: 0.5rem 0.75rem;
            padding-top: 2.5rem;
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
          }
      
          & > span {
            position: absolute;
            top: -10px;
            left: 0.5rem;
            z-index: 100;
        
            padding: 1px 3px;
        
            border: 1px solid rgb(var(--text));
            background-color: rgb(var(--background));
          }
        }

        .legend-item {
          display: flex;
          align-items: center;
          gap: 0.75rem;
          width: 100%;
        
          & svg {
            width: 1.2rem;
            height: 1.2rem;
            flex-shrink: 0;
          }
      
          & a:hover {
            text-underline-offset: 2px;
          }
      
          & span {
            &:first-child {
              width: 0.75rem;
              height: 0.75rem;
              border-radius: 0.25rem;
              border: 1px solid rgb(var(--text));
            }
          }
        }

        @media only screen and (min-width: 700px) {
        
          #open-menu-icon {
            display: none;
          }
          #pointer {
            display: none;
          }
        }
      </style>
    </aside>
  )
}
