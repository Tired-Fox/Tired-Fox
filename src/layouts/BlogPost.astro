---
import type { MarkdownHeading } from "astro";
import FormattedDate from "../components/FormattedDate.astro";
import type { Link, Section } from "../scripts/navigation";
import Blueprint from "./Blueprint.astro";
import type { CollectionEntry } from "astro:content";

type Props = CollectionEntry<"blog">["data"] & {
  headLinks?: MarkdownHeading[];
};
const { title, description, pubDate, updatedDate, headLinks } = Astro.props;

const generateHeaderLinks = (): Link[] => {
  return [
    {
      src: "#top",
      display: "Top",
    },
    ...(headLinks as MarkdownHeading[])
      .filter((heading) => heading.depth === 2)
      .map((heading) => {
        return {
          name: "heading",
          src: `#${heading.slug}`,
          display: heading.text,
        };
      }),
    {
      src: "#bottom",
      display: "Bottom",
    },
  ];
};

const pages: Section = {
  name: "Pages",
  links: [
    {
      src: "/",
      display: "Home",
    },
    {
      src: "/blog/",
      display: "Blog",
    },
  ],
};
---

<Blueprint
  links={generateHeaderLinks()}
>
  <article>
    <h1>{title}</h1>
    <FormattedDate date={pubDate} />
    {
      updatedDate && (
        <div class="last-updated-on">
          Last updated on <FormattedDate date={updatedDate} />
        </div>
      )
    }
    <hr />
    <slot />
  </article>
</Blueprint>
